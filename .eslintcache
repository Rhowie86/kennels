[{"/Users/ronhowie/workspace/kennels/src/index.js":"1","/Users/ronhowie/workspace/kennels/src/reportWebVitals.js":"2","/Users/ronhowie/workspace/kennels/src/components/Kennel.js":"3","/Users/ronhowie/workspace/kennels/src/components/animal/AnimalCard.js":"4","/Users/ronhowie/workspace/kennels/src/components/location/LocationCard.js":"5","/Users/ronhowie/workspace/kennels/src/components/employee/EmployeeCard.js":"6","/Users/ronhowie/workspace/kennels/src/components/customer/CustomerCard.js":"7","/Users/ronhowie/workspace/kennels/src/components/ApplicationViews.js":"8","/Users/ronhowie/workspace/kennels/src/components/nav/NavBar.js":"9","/Users/ronhowie/workspace/kennels/src/components/Home.js":"10","/Users/ronhowie/workspace/kennels/src/components/PropsAndState.js":"11","/Users/ronhowie/workspace/kennels/src/components/animal/AnimalList.js":"12","/Users/ronhowie/workspace/kennels/src/components/animal/AnimalProvider.js":"13","/Users/ronhowie/workspace/kennels/src/components/customer/CustomerList.js":"14","/Users/ronhowie/workspace/kennels/src/components/customer/CustomerProvider.js":"15","/Users/ronhowie/workspace/kennels/src/components/employee/EmployeeProvider.js":"16","/Users/ronhowie/workspace/kennels/src/components/employee/EmployeeList.js":"17","/Users/ronhowie/workspace/kennels/src/components/location/LocationProvider.js":"18","/Users/ronhowie/workspace/kennels/src/components/location/LocationList.js":"19","/Users/ronhowie/workspace/kennels/src/components/animal/AnimalForm.js":"20","/Users/ronhowie/workspace/kennels/src/components/employee/EmployeeForm.js":"21","/Users/ronhowie/workspace/kennels/src/components/location/LocationForm.js":"22","/Users/ronhowie/workspace/kennels/src/components/animal/AnimalDetail.js":"23","/Users/ronhowie/workspace/kennels/src/components/employee/EmployeeDetail.js":"24","/Users/ronhowie/workspace/kennels/src/components/location/LocationDetail.js":"25","/Users/ronhowie/workspace/kennels/src/components/auth/Login.js":"26","/Users/ronhowie/workspace/kennels/src/components/auth/Register.js":"27"},{"size":348,"mtime":1611245919028,"results":"28","hashOfConfig":"29"},{"size":362,"mtime":1611170559967,"results":"30","hashOfConfig":"29"},{"size":736,"mtime":1611697460019,"results":"31","hashOfConfig":"29"},{"size":394,"mtime":1611674349131,"results":"32","hashOfConfig":"29"},{"size":599,"mtime":1611683236483,"results":"33","hashOfConfig":"29"},{"size":362,"mtime":1611683141052,"results":"34","hashOfConfig":"29"},{"size":276,"mtime":1611339754252,"results":"35","hashOfConfig":"29"},{"size":2984,"mtime":1611698010632,"results":"36","hashOfConfig":"29"},{"size":886,"mtime":1611244069995,"results":"37","hashOfConfig":"29"},{"size":395,"mtime":1611246164720,"results":"38","hashOfConfig":"29"},{"size":493,"mtime":1611246316888,"results":"39","hashOfConfig":"29"},{"size":1333,"mtime":1611676398833,"results":"40","hashOfConfig":"29"},{"size":1851,"mtime":1611697931597,"results":"41","hashOfConfig":"29"},{"size":748,"mtime":1611335584445,"results":"42","hashOfConfig":"29"},{"size":989,"mtime":1611339955794,"results":"43","hashOfConfig":"29"},{"size":1168,"mtime":1611690084961,"results":"44","hashOfConfig":"29"},{"size":1154,"mtime":1611681116659,"results":"45","hashOfConfig":"29"},{"size":1214,"mtime":1611682892519,"results":"46","hashOfConfig":"29"},{"size":983,"mtime":1611603274211,"results":"47","hashOfConfig":"29"},{"size":5497,"mtime":1611698770958,"results":"48","hashOfConfig":"29"},{"size":3953,"mtime":1611597999724,"results":"49","hashOfConfig":"29"},{"size":3559,"mtime":1611603197717,"results":"50","hashOfConfig":"29"},{"size":1194,"mtime":1611698060823,"results":"51","hashOfConfig":"29"},{"size":773,"mtime":1611681466710,"results":"52","hashOfConfig":"29"},{"size":1676,"mtime":1611695660550,"results":"53","hashOfConfig":"29"},{"size":2171,"mtime":1611697497402,"results":"54","hashOfConfig":"29"},{"size":3132,"mtime":1611697497399,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1trd211",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ronhowie/workspace/kennels/src/index.js",[],["118","119"],"/Users/ronhowie/workspace/kennels/src/reportWebVitals.js",[],"/Users/ronhowie/workspace/kennels/src/components/Kennel.js",[],"/Users/ronhowie/workspace/kennels/src/components/animal/AnimalCard.js",[],"/Users/ronhowie/workspace/kennels/src/components/location/LocationCard.js",[],"/Users/ronhowie/workspace/kennels/src/components/employee/EmployeeCard.js",[],"/Users/ronhowie/workspace/kennels/src/components/customer/CustomerCard.js",[],"/Users/ronhowie/workspace/kennels/src/components/ApplicationViews.js",[],"/Users/ronhowie/workspace/kennels/src/components/nav/NavBar.js",[],"/Users/ronhowie/workspace/kennels/src/components/Home.js",[],"/Users/ronhowie/workspace/kennels/src/components/PropsAndState.js",[],"/Users/ronhowie/workspace/kennels/src/components/animal/AnimalList.js",["120","121","122"],"import React, { useContext, useEffect } from \"react\"\nimport { useHistory } from 'react-router-dom';\nimport { AnimalContext } from \"./AnimalProvider\"\nimport { LocationContext } from \"../location/LocationProvider\"\nimport { CustomerContext } from \"../customer/CustomerProvider\"\nimport { AnimalCard } from \"./AnimalCard\"\nimport \"./Animal.css\"\n\n\nexport const AnimalList = () => {\n  // This state changes when `getAnimals()` is invoked below\n  const { animals, getAnimals } = useContext(AnimalContext)\n  const { locations, getLocations} = useContext(LocationContext)\n  const { customers, getCustomers } = useContext(CustomerContext)\n\n  //useEffect - reach out to the world for something\n  useEffect(() => {\n    console.log(\"AnimalList: useEffect - getAnimals\")\n    getLocations()\n    .then(getCustomers)\n    .then(getAnimals)\n\n  }, [])\n\n\n\n\n  const history = useHistory()\n\n  return (\n      <>\n            <h2>Animals</h2>\n                <button onClick={() => {history.push(\"/animals/create\")}}>\n                    Add Animal\n                </button>\n\n                <div className=\"animals\">\n                {\n        animals.map(animal => {\n          \n          return <AnimalCard key={animal.id} \n                    animal={animal}\n                    \n                     />\n        })\n      }\n\n                </div>\n    </>\n )\n}","/Users/ronhowie/workspace/kennels/src/components/animal/AnimalProvider.js",[],"/Users/ronhowie/workspace/kennels/src/components/customer/CustomerList.js",["123"],"import React, { useContext, useEffect } from \"react\"\nimport { CustomerContext } from \"./CustomerProvider\"\nimport { CustomerCard } from \"./CustomerCard\"\nimport \"./customer.css\"\n\nexport const CustomerList = () => {\n  // This state changes when `getCustomers()` is invoked below\n  const { customers, getCustomers } = useContext(CustomerContext)\n\n  //useEffect - reach out to the world for something\n  useEffect(() => {\n    console.log(\"CustomerList: useEffect - getCustomers\")\n    getCustomers()\n\n  }, [])\n\n\n  return (\n    <div className=\"customers\">\n      {console.log(\"CustomerList: Render\", customers)}\n      {\n        customers.map(person => {\n          return <CustomerCard key={person.id} customer={person} />\n        })\n      }\n    </div>\n  )\n}","/Users/ronhowie/workspace/kennels/src/components/customer/CustomerProvider.js",[],"/Users/ronhowie/workspace/kennels/src/components/employee/EmployeeProvider.js",[],"/Users/ronhowie/workspace/kennels/src/components/employee/EmployeeList.js",["124","125"],"import React, { useContext, useEffect } from \"react\"\nimport { useHistory } from 'react-router-dom';\nimport { EmployeeContext } from \"./EmployeeProvider\"\nimport { LocationContext } from \"../location/LocationProvider\"\n\nimport { EmployeeCard } from \"./EmployeeCard\"\nimport \"./employee.css\"\n\nexport const EmployeeList = () => {\n  // This state changes when `getEmployees()` is invoked below\n  const { employees, getEmployees } = useContext(EmployeeContext)\n  const { locations, getLocations } = useContext(LocationContext)\n\n  //useEffect - reach out to the world for something\n  useEffect(() => {\n    console.log(\"EmployeeList: useEffect - getEmployees\")\n    getLocations()\n    .then(getEmployees)\n\n  }, [])\n\n\n  const history = useHistory()\n\n  return (\n    <>\n\n      <h2>Employees</h2>\n        <button onClick={() => {history.push(\"/employees/create\")}}>\n          New Employee\n        </button>\n    \n    <div className=\"employees\">\n      {console.log(\"EmployeeList: Render\", employees)}\n      {\n        employees.map(employee => {\n         \n          return <EmployeeCard key={employee.id} employee={employee}  />\n        })\n      }\n    </div>\n    </>\n  )\n}","/Users/ronhowie/workspace/kennels/src/components/location/LocationProvider.js",[],"/Users/ronhowie/workspace/kennels/src/components/location/LocationList.js",["126"],"import React, { useContext, useEffect } from \"react\"\nimport { useHistory } from 'react-router-dom';\nimport { LocationContext } from \"./LocationProvider\"\nimport { LocationCard } from \"./LocationCard\"\nimport \"./location.css\"\n\nexport const LocationList = () => {\n  // This state changes when `getLocations()` is invoked below\n  const { locations, getLocations } = useContext(LocationContext)\n\n  //useEffect - reach out to the world for something\n  useEffect(() => {\n    console.log(\"LocationList: useEffect - getLocations\")\n    getLocations()\n\n  }, [])\n\n  const history = useHistory()\n\n  return (\n    <>\n      <h2>Locations</h2>\n        <button onClick={() => {history.push(\"/locations/create\")}}>\n          New Location\n        </button>\n    <div className=\"locations\">\n      {console.log(\"LocationList: Render\", locations)}\n      {\n        locations.map(place => {\n         \n          return <LocationCard key={place.id} location={place} />\n        })\n      }\n    </div>\n    </>\n  )\n}","/Users/ronhowie/workspace/kennels/src/components/animal/AnimalForm.js",["127","128","129","130","131","132"],"/Users/ronhowie/workspace/kennels/src/components/employee/EmployeeForm.js",["133"],"import React, { useContext, useEffect, useState } from \"react\"\nimport { useHistory } from 'react-router-dom';\nimport { LocationContext } from \"../location/LocationProvider\"\nimport { EmployeeContext } from \"./EmployeeProvider\"\nimport \"./employee.css\"\n\nexport const EmployeeForm = () => {\n    const { addEmployee } = useContext(EmployeeContext)\n    \n    const { locations, getLocations } = useContext(LocationContext)\n    \n\n      /*\n    With React, we do not target the DOM with `document.querySelector()`. Instead, our return (render) reacts to state or props.\n\n    Define the intial state of the form inputs with useState()\n    */\n\n    const [employee, setEmployee] = useState({\n        name:\"\",\n        locationId: 0,\n    });\n\n    \n    const history = useHistory();\n    \n    /*\n   Reach out to the world and get customers state\n   and locations state on initialization.\n   */\n\n    useEffect(() => {\n        getLocations()\n    }, [])\n\n\n      //when a field changes, update state. The return will re-render and display based on the values in state\n        // NOTE! What's happening in this function can be very difficult to grasp. Read it over many times and ask a lot questions about it.\n    //Controlled component\n    const handleControlledInputChange = (event) => {\n        /* When changing a state object or array,\n        always create a copy, make changes, and then set state.*/\n        const newEmployee = { ...employee }\n        let selectedVal = event.target.value\n        // forms always provide values as strings. But we want to save the ids as numbers. This will cover both customer and location ids\n        if (event.target.id.includes(\"Id\")) {\n          selectedVal = parseInt(selectedVal)\n        }\n        /* Animal is an object with properties.\n        Set the property to the new value\n        using object bracket notation. */\n        newEmployee[event.target.id] = selectedVal\n        // update state\n        setEmployee(newEmployee)\n      }\n\n    const handleClickSaveEmployee = (event) => {\n        event.preventDefault() //Prevents the browser from submitting the form\n\n        const locationId = parseInt(employee.locationId)\n        \n\n        if (locationId === 0){\n            window.alert(\"Please selet a location\")\n        } else {\n            employee.locationId = locationId\n            \n            //invoke addAnimal passing animal as an argument.\n            //once complete, change the url and display the animal list\n            addEmployee(employee)\n            .then(() => history.push(\"/employees\"))\n        }\n            \n    }\n\n    return (\n        <form className=\"employeeForm\">\n            <h2 className=\"employeeForm__title\">New Employee</h2>\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"name\">Employee name:</label>\n                    <input type=\"text\" id=\"name\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Employee name\" value={employee.name}/>\n                </div>\n            </fieldset>\n           \n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"location\">Assign to location: </label>\n                    <select defaultValue={employee.locationId}  onChange={handleControlledInputChange} name=\"locationId\" id=\"locationId\" className=\"form-control\">\n                        <option value=\"0\">Select a location</option>\n                        {locations.map(l => (\n                            <option key={l.id} value={l.id}>\n                                {l.name}\n                            </option>\n                        ))}\n                    </select>\n                </div>\n            </fieldset>\n           \n            <button className=\"btn btn-primary\"\n                onClick={handleClickSaveEmployee}>\n                    Save Employee\n                </button>\n        </form>\n    )\n}\n\n                        \n     ","/Users/ronhowie/workspace/kennels/src/components/location/LocationForm.js",["134","135"],"import React, { useContext, useEffect, useState } from \"react\"\nimport { useHistory } from 'react-router-dom';\nimport { LocationContext } from \"../location/LocationProvider\"\n\nimport \"./location.css\"\n\nexport const LocationForm = () => {\n    const { addLocation } = useContext(LocationContext)\n    const { locations, getLocations } = useContext(LocationContext)\n    \n    \n\n      /*\n    With React, we do not target the DOM with `document.querySelector()`. Instead, our return (render) reacts to state or props.\n\n    Define the intial state of the form inputs with useState()\n    */\n\n    const [location, setLocations] = useState({\n        name:\"\",\n        address:\"\"\n    });\n\n    \n    const history = useHistory();\n    \n    /*\n   Reach out to the world and get customers state\n   and locations state on initialization.\n   */\n\n    useEffect(() => {\n        getLocations()\n    }, [])\n\n\n      //when a field changes, update state. The return will re-render and display based on the values in state\n        // NOTE! What's happening in this function can be very difficult to grasp. Read it over many times and ask a lot questions about it.\n    //Controlled component\n    const handleControlledInputChange = (event) => {\n        /* When changing a state object or array,\n        always create a copy, make changes, and then set state.*/\n        const newLocation = { ...location }\n        let selectedVal = event.target.value\n        // forms always provide values as strings. But we want to save the ids as numbers. This will cover both customer and location ids\n        if (event.target.id.includes(\"Id\")) {\n          selectedVal = parseInt(selectedVal)\n        }\n        /* Animal is an object with properties.\n        Set the property to the new value\n        using object bracket notation. */\n        newLocation[event.target.id] = selectedVal\n        // update state\n        setLocations(newLocation)\n      }\n\n    const handleClickSaveEmployee = (event) => {\n        event.preventDefault() //Prevents the browser from submitting the form\n\n        const locationId = parseInt(location.Id)\n        \n\n        if (locationId === 0){\n            window.alert(\"Please selet a location\")\n        } else {\n            location.Id = locationId\n            \n            //invoke addAnimal passing animal as an argument.\n            //once complete, change the url and display the animal list\n            addLocation(location)\n            .then(() => history.push(\"/locations\"))\n        }\n            \n    }\n\n    return (\n        <form className=\"locationForm\">\n            <h2 className=\"locationForm__title\">New Employee</h2>\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"name\">Location name:</label>\n                    <input type=\"text\" id=\"name\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Location name\" value={location.name}/>\n                </div>\n            </fieldset>\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"address\">Location address:</label>\n                    <input type=\"text\" id=\"address\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Location address\" value={location.address}/>\n                </div>\n            </fieldset>\n           \n            <button className=\"btn btn-primary\"\n                onClick={handleClickSaveEmployee}>\n                    Save Location\n                </button>\n        </form>\n    )\n}\n\n     ","/Users/ronhowie/workspace/kennels/src/components/animal/AnimalDetail.js",["136"],"/Users/ronhowie/workspace/kennels/src/components/employee/EmployeeDetail.js",["137","138"],"import React, { useContext, useEffect, useState } from \"react\"\nimport { EmployeeContext } from \"./EmployeeProvider\"\nimport \"./employee.css\"\nimport { useParams, useHistory } from \"react-router-dom\"\n\nexport const EmployeeDetail = () => {\n    const { getEmployeeById } = useContext(EmployeeContext)\n\n    const  [ employee, setEmployee ] = useState({})\n\n    const {employeeId} = useParams()\n    \n    useEffect(() => {\n        getEmployeeById(employeeId)\n        .then((res) => {\n            setEmployee(res)\n        })\n    }, [])\n\n    \n    return (\n        <section className=\"employee\">\n            <h3 className=\"employee__name\">{employee.name}</h3>\n            \n            <div className=\"employee__location\">{employee.location?.name}</div>\n        </section>\n    \n    )\n}\n","/Users/ronhowie/workspace/kennels/src/components/location/LocationDetail.js",["139"],"/Users/ronhowie/workspace/kennels/src/components/auth/Login.js",["140"],"/Users/ronhowie/workspace/kennels/src/components/auth/Register.js",["141"],{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":13,"column":11,"nodeType":"148","messageId":"149","endLine":13,"endColumn":20},{"ruleId":"146","severity":1,"message":"150","line":14,"column":11,"nodeType":"148","messageId":"149","endLine":14,"endColumn":20},{"ruleId":"151","severity":1,"message":"152","line":23,"column":6,"nodeType":"153","endLine":23,"endColumn":8,"suggestions":"154"},{"ruleId":"151","severity":1,"message":"155","line":15,"column":6,"nodeType":"153","endLine":15,"endColumn":8,"suggestions":"156"},{"ruleId":"146","severity":1,"message":"147","line":12,"column":11,"nodeType":"148","messageId":"149","endLine":12,"endColumn":20},{"ruleId":"151","severity":1,"message":"157","line":20,"column":6,"nodeType":"153","endLine":20,"endColumn":8,"suggestions":"158"},{"ruleId":"151","severity":1,"message":"159","line":16,"column":6,"nodeType":"153","endLine":16,"endColumn":8,"suggestions":"160"},{"ruleId":"146","severity":1,"message":"161","line":9,"column":24,"nodeType":"148","messageId":"149","endLine":9,"endColumn":37},{"ruleId":"146","severity":1,"message":"162","line":9,"column":39,"nodeType":"148","messageId":"149","endLine":9,"endColumn":51},{"ruleId":"146","severity":1,"message":"163","line":26,"column":12,"nodeType":"148","messageId":"149","endLine":26,"endColumn":21},{"ruleId":"146","severity":1,"message":"164","line":26,"column":23,"nodeType":"148","messageId":"149","endLine":26,"endColumn":35},{"ruleId":"146","severity":1,"message":"165","line":28,"column":12,"nodeType":"148","messageId":"149","endLine":28,"endColumn":20},{"ruleId":"151","severity":1,"message":"166","line":42,"column":8,"nodeType":"153","endLine":42,"endColumn":10,"suggestions":"167"},{"ruleId":"151","severity":1,"message":"159","line":34,"column":8,"nodeType":"153","endLine":34,"endColumn":10,"suggestions":"168"},{"ruleId":"146","severity":1,"message":"147","line":9,"column":13,"nodeType":"148","messageId":"149","endLine":9,"endColumn":22},{"ruleId":"151","severity":1,"message":"159","line":34,"column":8,"nodeType":"153","endLine":34,"endColumn":10,"suggestions":"169"},{"ruleId":"151","severity":1,"message":"170","line":28,"column":8,"nodeType":"153","endLine":28,"endColumn":10,"suggestions":"171"},{"ruleId":"146","severity":1,"message":"172","line":4,"column":21,"nodeType":"148","messageId":"149","endLine":4,"endColumn":31},{"ruleId":"151","severity":1,"message":"173","line":18,"column":8,"nodeType":"153","endLine":18,"endColumn":10,"suggestions":"174"},{"ruleId":"151","severity":1,"message":"175","line":18,"column":8,"nodeType":"153","endLine":18,"endColumn":10,"suggestions":"176"},{"ruleId":"146","severity":1,"message":"177","line":9,"column":11,"nodeType":"148","messageId":"149","endLine":9,"endColumn":19},{"ruleId":"146","severity":1,"message":"178","line":9,"column":11,"nodeType":"148","messageId":"149","endLine":9,"endColumn":25},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"no-unused-vars","'locations' is assigned a value but never used.","Identifier","unusedVar","'customers' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getAnimals', 'getCustomers', and 'getLocations'. Either include them or remove the dependency array.","ArrayExpression",["181"],"React Hook useEffect has a missing dependency: 'getCustomers'. Either include it or remove the dependency array.",["182"],"React Hook useEffect has missing dependencies: 'getEmployees' and 'getLocations'. Either include them or remove the dependency array.",["183"],"React Hook useEffect has a missing dependency: 'getLocations'. Either include it or remove the dependency array.",["184"],"'getAnimalById' is assigned a value but never used.","'updateAnimal' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.","'animalId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getCustomers' and 'getLocations'. Either include them or remove the dependency array.",["185"],["186"],["187"],"React Hook useEffect has missing dependencies: 'animalId' and 'getAnimalById'. Either include them or remove the dependency array.",["188"],"'useHistory' is defined but never used.","React Hook useEffect has missing dependencies: 'employeeId' and 'getEmployeeById'. Either include them or remove the dependency array.",["189"],"React Hook useEffect has missing dependencies: 'getLocationById' and 'locationId'. Either include them or remove the dependency array.",["190"],"'password' is assigned a value but never used.","'verifyPassword' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"desc":"197","fix":"201"},{"desc":"197","fix":"202"},{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},"Update the dependencies array to be: [getAnimals, getCustomers, getLocations]",{"range":"209","text":"210"},"Update the dependencies array to be: [getCustomers]",{"range":"211","text":"212"},"Update the dependencies array to be: [getEmployees, getLocations]",{"range":"213","text":"214"},"Update the dependencies array to be: [getLocations]",{"range":"215","text":"216"},"Update the dependencies array to be: [getCustomers, getLocations]",{"range":"217","text":"218"},{"range":"219","text":"216"},{"range":"220","text":"216"},"Update the dependencies array to be: [animalId, getAnimalById]",{"range":"221","text":"222"},"Update the dependencies array to be: [employeeId, getEmployeeById]",{"range":"223","text":"224"},"Update the dependencies array to be: [getLocationById, locationId]",{"range":"225","text":"226"},[826,828],"[getAnimals, getCustomers, getLocations]",[499,501],"[getCustomers]",[700,702],"[getEmployees, getLocations]",[546,548],"[getLocations]",[1442,1444],"[getCustomers, getLocations]",[930,932],[875,877],[692,694],"[animalId, getAnimalById]",[522,524],"[employeeId, getEmployeeById]",[522,524],"[getLocationById, locationId]"]